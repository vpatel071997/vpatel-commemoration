{"version":3,"sources":["assets/statue-commemorating-australians-who-served-in-the-vietnam-war-1962-1973-located-in-anzac-square_t20_6lPKBO.jpg","components/introOverlay.js","components/banner.js","components/header.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IntroOverlay","className","Banner","src","require","alt","Header","tl","gsap","timeline","Home","dimensions","useState","animationComplete","setAnimationComplete","completeAnimation","useEffect","from","y","opacity","ease","delay","skewY","stagger","amount","to","x","height","css","display","scale","onComplete","homeAnimation","vh","document","documentElement","style","setProperty","width","App","React","window","innerHeight","innerWidth","setDimensions","visibility","debouncedHandleResize","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a346e21b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/statue-commemorating-australians-who-served-in-the-vietnam-war-1962-1973-located-in-anzac-square_t20_6lPKBO.c3a3bb88.jpg\";","import React from \"react\";\n\nconst IntroOverlay = () => {\n  return (\n    <>\n      <div className='intro-overlay'>\n        <div className='top'>\n          <div className='overlay-top'></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IntroOverlay;\n","import React from \"react\";\n\nconst Banner = () => {\n  return (\n    <section className='main'>\n      <div className='container'>\n        <div className='row'>\n          <h2>\n            <div className='line'>\n              <span>COMMEMORATION</span>\n            </div>\n          </h2>\n          <div className='btn-row'>\n            <h3>Statue commemorating Australians</h3>\n            <p>A statue built in memories of the soilder who served in the Vietnam War Located in ANZAC Square, Brisbane, Australia.</p>\n          </div>\n          <div className='case'>\n            <div className=\"image-overlay\"></div>\n            <div className='case-image'>\n              <img src={require(`../assets/statue-commemorating-australians-who-served-in-the-vietnam-war-1962-1973-located-in-anzac-square_t20_6lPKBO.jpg`)} alt=\"vpatel.design portfolio image\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <div className='container'>\n        <div className='row v-center space-between'>\n          <div className='logo'>\n            by Vaibhav Patel\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport IntroOverlay from \"../components/introOverlay\";\nimport Banner from \"../components/banner\";\nimport Header from \"../components/header\";\nimport gsap from \"gsap\";\n\nlet tl = gsap.timeline();\n\nconst homeAnimation = completeAnimation => {\n  tl.from(\".line span\", 1.8, {\n    y: 500,\n    opacity: 0,\n    ease: \"power4.out\",\n    delay: 1,\n    skewY: 7,\n    stagger: {\n      amount: 0.3\n    }\n  })\n    .to(\".overlay-top\", 1.6, {\n      x: \"50vw\",\n      ease: \"expo.inOut\",\n      stagger: 0.4\n    })\n    .to(\".overlay-top\", .6, {\n      height: 0,\n      ease: \"expo.inOut\",\n      stagger: 0.4\n    })\n    .to(\".intro-overlay\", 0, {\n      css: { display: \"none\" }\n    })\n    .to(\".header\", 1.6, {\n      y: \"0\",\n      ease: \"expo.inOut\",\n      stagger: 0.4\n    })\n    .from(\".case-image img\", 1.6, {\n      scale: 1.4,\n      opacity: 0,\n      ease: \"expo.inOut\",\n      delay: -1,\n      stagger: {\n        amount: 0.4\n      },\n      onComplete: completeAnimation\n    })\n    .from(\".btn-row\", 1.6, {\n      scale: 1.4,\n      opacity: 0,\n      ease: \"expo.inOut\",\n      delay: -1,\n      stagger: {\n        amount: 0.4\n      }\n    })\n};\n\nconst Home = ({ dimensions }) => {\n  const [animationComplete, setAnimationComplete] = useState(false);\n\n  const completeAnimation = () => {\n    setAnimationComplete(true);\n  };\n\n  useEffect(() => {\n    homeAnimation(completeAnimation);\n  }, []);\n\n  useEffect(() => {\n    let vh = dimensions.height * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  }, [dimensions.width, dimensions.height]);\n\n  return (\n    <>\n      {animationComplete === false ? <IntroOverlay /> : \"\"}\n      <Header />\n      <Banner />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport \"./styles/App.scss\";\n\nimport Home from \"./pages/home\";\n\n\n\nfunction debounce(fn, ms) {\n  let timer;\n  return () => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = null;\n      fn.apply(this, arguments);\n    }, ms);\n  };\n}\n\nfunction App() {\n  const [dimensions, setDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth\n  });\n\n  useEffect(() => {\n    // prevents flashing\n    gsap.to(\"body\", 0, { css: { visibility: \"visible\" } });\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth\n      });\n    }, 1000);\n\n    window.addEventListener(\"resize\", debouncedHandleResize);\n    return () => {\n      window.removeEventListener(\"resize\", debouncedHandleResize);\n    };\n  });\n  return (\n    <>\n      <div className='App'>\n        <Home dimensions={dimensions}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}